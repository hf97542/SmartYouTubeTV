apply plugin: 'com.android.library'

android {
    compileSdkVersion project.properties.compileSdkVersion
    buildToolsVersion project.properties.buildToolsVersion

    defaultConfig {
        minSdkVersion project.properties.minSdkVersion
        targetSdkVersion project.properties.targetSdkVersion
        versionCode 7
        versionName "6.4.7"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // In the library module's build.gradle, you need a couple extra lines to tell it to
    // export the flavors and which build variant to use by default if not specified when being included from another module:
    defaultPublishConfig "liteDebug"
    publishNonDefault true

    productFlavors {
        lite {}
        full {}
    }

    lintOptions {
        abortOnError true
        disable 'MissingTranslation'
        disable 'NewApi'
    }
}

dependencies {
    androidTestCompile(project.properties.espressoCoreVersion, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile project.properties.junitVersion

    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile project.properties.appCompatVersion
    compile project.properties.androidLoggerVersion
    
    compile project.properties.okhttpVersion
    compile project.properties.dnsjavaVersion

    compile project(path: ':common')

    // https://download.01.org/crosswalk/releases/crosswalk/android/stable/latest/
    liteCompile project.properties.xwalkSharedLibraryVersion
    fullCompile(project.properties.xwalkCoreLibraryVersion, {
        exclude group: 'com.android.support', module: 'support-v4'
    })

    // AppUpdateChecker component
    debugCompile project(path: ':appupdatechecker', configuration: "debug")
    releaseCompile project(path: ':appupdatechecker', configuration: "release")
}
